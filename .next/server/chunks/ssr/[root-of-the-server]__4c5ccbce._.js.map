{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/cinephile/app/genre/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport axios from \"axios\";\n\nconst allGenres = [\n  \"Action\", \"Adventure\", \"Animation\", \"Biography\", \"Comedy\", \"Crime\",\n  \"Documentary\", \"Drama\", \"Family\", \"Fantasy\", \"Film-Noir\", \"History\",\n  \"Horror\", \"Music\", \"Musical\", \"Mystery\", \"Romance\", \"Sci-Fi\", \"Sport\",\n  \"Thriller\", \"War\", \"Western\", \"Reality-TV\", \"Short\", \"Talk-Show\", \"Game-Show\",\n  \"Superhero\", \"Detective\", \"Classic\", \"Survival\", \"Cyberpunk\", \"Psychological\",\n];\n\ninterface Movie {\n  Title: string;\n  Year: string;\n  imdbID: string;\n  Poster: string;\n  Genre?: string;\n  imdbRating?: string;\n  Plot?: string;\n  Actors?: string;\n}\n\nexport default function GenrePage() {\n  const router = useRouter();\n  const apikey = \"https://www.omdbapi.com/?apikey=a4d5b9\";\n\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [modalMovie, setModalMovie] = useState<Movie | null>(null);\n  const [addedMessage, setAddedMessage] = useState<string | null>(null);\n\n  const toggleGenre = (genre: string) => {\n    setSelectedGenres((prev) =>\n      prev.includes(genre) ? prev.filter((g) => g !== genre) : [...prev, genre]\n    );\n  };\n\n  const clearGenres = () => {\n    setSelectedGenres([]);\n    setMovies([]);\n  };\n\n  const addToList = (movie: Movie) => {\n    const list = JSON.parse(localStorage.getItem(\"mylist\") || \"[]\");\n    const exists = list.some((m: Movie) => m.imdbID === movie.imdbID);\n    if (!exists) {\n      list.push(movie);\n      localStorage.setItem(\"mylist\", JSON.stringify(list));\n      setAddedMessage(`${movie.Title} has been added to your list.`);\n      setTimeout(() => setAddedMessage(null), 2500);\n    }\n  };\n\n  const fetchMoviesByGenre = async () => {\n    if (selectedGenres.length === 0) return;\n    setLoading(true);\n\n    try {\n      const queries = await Promise.all(\n        selectedGenres.map((genre) =>\n          axios.get(`${apikey}&s=${genre}`)\n        )\n      );\n\n      const results = (\n        await Promise.all(\n          queries\n            .map((res) => (res.data as { Search?: any[] }).Search || [])\n            .flat()\n            .map(async (movie: any) => {\n              const { data } = await axios.get(`${apikey}&i=${movie.imdbID}`);\n              return data;\n            })\n        )\n      ).filter((m) =>\n        selectedGenres.some((g) =>\n          (m as Movie).Genre?.toLowerCase().includes(g.toLowerCase())\n        )\n      );\n\n      setMovies(results as Movie[]);\n    } catch (err) {\n      console.error(\"Failed to fetch genre movies:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMoviesByGenre();\n  }, [selectedGenres]);\n\n  return (\n    <div\n      className=\"min-h-screen w-full relative overflow-hidden text-white\"\n      style={{\n        backgroundImage: `url('https://media.tenor.com/bZEUn3ywcQQAAAAM/stormcastle-count-down.gif')`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundAttachment: \"fixed\",\n        fontFamily: \"Times New Roman, serif\",\n      }}\n    >\n      <div className=\"absolute inset-0 bg-black/60 backdrop-blur-sm\"></div>\n\n      {loading && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-md\">\n          <span className=\"loader\"></span>\n          <style>{`\n            .loader {\n              position: relative;\n              width: 100px;\n              height: 100px;\n              border: 24px solid #FFF;\n              border-radius: 50%;\n              animation: eat 1s linear infinite;\n            }\n            .loader::after, .loader::before {\n              content: '';\n              position: absolute;\n              left: 50px;\n              top: 50%;\n              transform: translateY(-50%);\n              background: #fff;\n              width: 15px;\n              height: 15px;\n              border-radius: 50%;\n              opacity: 0;\n              animation: move 2s linear infinite;\n            }\n            .loader::before {\n              animation-delay: 1s;\n            }\n            @keyframes eat {\n              0%, 49% { border-right-color: #FFF; }\n              50%, 100% { border-right-color: transparent; }\n            }\n            @keyframes move {\n              0% { left: 75px; opacity: 1; }\n              50% { left: 0px; opacity: 1; }\n              52%, 100% { left: -5px; opacity: 0; }\n            }\n          `}</style>\n        </div>\n      )}\n\n      {addedMessage && (\n        <div className=\"fixed top-6 left-1/2 transform -translate-x-1/2 z-50 bg-green-600 text-white px-6 py-2 rounded-lg shadow-lg\">\n          {addedMessage}\n        </div>\n      )}\n\n      <div className=\"relative z-10 p-6 max-w-7xl mx-auto\">\n        <h1 className=\"text-4xl md:text-5xl font-bold mb-4 drop-shadow-[0_0_10px_white]\">\n          Genre Based Filtering\n        </h1>\n        <p className=\"text-white/80 mb-6\">\n          Click genres below to find movies that match your interests.\n        </p>\n\n        <div className=\"flex flex-wrap gap-2 mb-6 max-w-5xl\">\n          {allGenres.map((genre) => (\n            <button\n              key={genre}\n              onClick={() => toggleGenre(genre)}\n              className={`text-xs px-3 py-1 rounded-full border whitespace-nowrap ${\n                selectedGenres.includes(genre)\n                  ? \"bg-white text-black border-white\"\n                  : \"bg-white/10 text-white border-white/30 hover:bg-white/20\"\n              } transition`}\n            >\n              {genre}\n            </button>\n          ))}\n          <button\n            onClick={clearGenres}\n            className=\"text-xs px-3 py-1 rounded-full bg-red-600/70 hover:bg-red-700 transition text-white\"\n          >\n            ❌ Clear All\n          </button>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n          {movies.map((movie) => (\n            <div\n              key={movie.imdbID}\n              className=\"bg-white/10 backdrop-blur-md rounded-xl p-4 text-center border border-white/20 hover:scale-105 transition\"\n            >\n              <img\n                src={movie.Poster !== \"N/A\" ? movie.Poster : \"/placeholder.png\"}\n                alt={movie.Title}\n                className=\"w-full h-64 object-cover rounded-lg mb-4\"\n              />\n              <h3 className=\"text-xl font-semibold mb-1\">{movie.Title}</h3>\n              <p className=\"text-white/70\">{movie.Year}</p>\n              <p className=\"text-yellow-300 text-sm\">⭐ {movie.imdbRating}</p>\n              <p className=\"text-white/60 text-xs mt-1\">{movie.Genre}</p>\n              <button\n                onClick={() => addToList(movie)}\n                className=\"mt-2 px-3 py-1 text-sm bg-green-600 hover:bg-green-700 rounded-full text-white\"\n              >\n                ➕ Add to List\n              </button>\n            </div>\n          ))}\n        </div>\n\n        {movies.length === 0 && !loading && selectedGenres.length > 0 && (\n          <p className=\"text-center text-white/70 mt-12 text-lg\">\n            No movies found for selected genres.\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}